{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  title: '',\n  fields: [{\n    type: 'dropdown',\n    count: '',\n    data: []\n  }, {\n    type: 'textField',\n    count: '',\n    data: []\n  }, {\n    type: 'textArea',\n    count: '',\n    data: []\n  }, {\n    type: 'switch',\n    count: '',\n    data: []\n  }, {\n    type: 'radio',\n    count: '',\n    data: []\n  }],\n  formDataList: []\n};\nconst formSlice = createSlice({\n  name: 'form',\n  initialState,\n  reducers: {\n    setTitle: (state, action) => {\n      console.log(state, action);\n      state.title = action.payload;\n    },\n    addField: (state, action) => {\n      state.fields.push(action.payload);\n    },\n    updateField: (state, action) => {\n      const {\n        index,\n        fieldData\n      } = action.payload;\n      state.fields[index] = {\n        ...state.fields[index],\n        ...fieldData\n      };\n    },\n    removeField: (state, action) => {\n      state.fields.splice(action.payload, 1);\n    },\n    addForm: (state, action) => {\n      state.formDataList.push(action.payload);\n    }\n  }\n});\nexport const {\n  setTitle,\n  addField,\n  updateField,\n  removeField\n} = formSlice.actions;\nexport default formSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","title","fields","type","count","data","formDataList","formSlice","name","reducers","setTitle","state","action","console","log","payload","addField","push","updateField","index","fieldData","removeField","splice","addForm","actions","reducer"],"sources":["/Users/yashsoni/Documents/web-apps/js codes/Machine-coding-UI/euler-motors/src/components/redux/slices/formSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nconst initialState = {\n  title: '',\n  fields: [\n    {type: 'dropdown', count: '', data: [] },\n    {type: 'textField', count: '', data: [] },\n    {type: 'textArea', count: '', data: [] },\n    {type: 'switch', count: '', data: [] },\n    {type: 'radio', count: '', data: [] }\n  ],\n  formDataList: []\n}\n\nconst formSlice = createSlice({\n  name: 'form',\n  initialState,\n  reducers: {\n    setTitle: (state, action) => {\n      console.log(state, action)\n      state.title = action.payload;\n    },\n    addField: (state, action) => {\n      state.fields.push(action.payload)\n    },\n    updateField: (state, action) => {\n      const {index, fieldData} = action.payload\n      state.fields[index] = { ...state.fields[index], ...fieldData }\n    },\n    removeField: (state, action) => {\n      state.fields.splice(action.payload, 1)\n    },\n    addForm: (state, action) => {\n      state.formDataList.push(action.payload)\n    }\n  }\n})\n\nexport const { setTitle, addField, updateField, removeField } = formSlice.actions \nexport default formSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,EAAE;EACTC,MAAM,EAAE,CACN;IAACC,IAAI,EAAE,UAAU;IAAEC,KAAK,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAG,CAAC,EACxC;IAACF,IAAI,EAAE,WAAW;IAAEC,KAAK,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAG,CAAC,EACzC;IAACF,IAAI,EAAE,UAAU;IAAEC,KAAK,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAG,CAAC,EACxC;IAACF,IAAI,EAAE,QAAQ;IAAEC,KAAK,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAG,CAAC,EACtC;IAACF,IAAI,EAAE,OAAO;IAAEC,KAAK,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAG,CAAC,CACtC;EACDC,YAAY,EAAE;AAChB,CAAC;AAED,MAAMC,SAAS,GAAGR,WAAW,CAAC;EAC5BS,IAAI,EAAE,MAAM;EACZR,YAAY;EACZS,QAAQ,EAAE;IACRC,QAAQ,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC3BC,OAAO,CAACC,GAAG,CAACH,KAAK,EAAEC,MAAM,CAAC;MAC1BD,KAAK,CAACV,KAAK,GAAGW,MAAM,CAACG,OAAO;IAC9B,CAAC;IACDC,QAAQ,EAAEA,CAACL,KAAK,EAAEC,MAAM,KAAK;MAC3BD,KAAK,CAACT,MAAM,CAACe,IAAI,CAACL,MAAM,CAACG,OAAO,CAAC;IACnC,CAAC;IACDG,WAAW,EAAEA,CAACP,KAAK,EAAEC,MAAM,KAAK;MAC9B,MAAM;QAACO,KAAK;QAAEC;MAAS,CAAC,GAAGR,MAAM,CAACG,OAAO;MACzCJ,KAAK,CAACT,MAAM,CAACiB,KAAK,CAAC,GAAG;QAAE,GAAGR,KAAK,CAACT,MAAM,CAACiB,KAAK,CAAC;QAAE,GAAGC;MAAU,CAAC;IAChE,CAAC;IACDC,WAAW,EAAEA,CAACV,KAAK,EAAEC,MAAM,KAAK;MAC9BD,KAAK,CAACT,MAAM,CAACoB,MAAM,CAACV,MAAM,CAACG,OAAO,EAAE,CAAC,CAAC;IACxC,CAAC;IACDQ,OAAO,EAAEA,CAACZ,KAAK,EAAEC,MAAM,KAAK;MAC1BD,KAAK,CAACL,YAAY,CAACW,IAAI,CAACL,MAAM,CAACG,OAAO,CAAC;IACzC;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEL,QAAQ;EAAEM,QAAQ;EAAEE,WAAW;EAAEG;AAAY,CAAC,GAAGd,SAAS,CAACiB,OAAO;AACjF,eAAejB,SAAS,CAACkB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}