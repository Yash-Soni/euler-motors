{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  title: '',\n  fields: [],\n  formDataList: []\n};\nconst formSlice = createSlice({\n  name: 'form',\n  initialState,\n  reducers: {\n    setTitle: (state, action) => {\n      state.title = action.payload;\n      console.log('State and action of setTitle reducer: ', state, action);\n    },\n    addField: (state, action) => {\n      state.fields.push(action.payload);\n    },\n    updateField: (state, action) => {\n      const {\n        index,\n        fieldData\n      } = action.payload;\n      state.fields[index] = {\n        ...state.fields[index],\n        ...fieldData\n      };\n    },\n    removeField: (state, action) => {\n      state.fields.splice(action.payload, 1);\n    },\n    addForm: (state, action) => {\n      state.formDataList.push(action.payload);\n      console.log(\"formDataList state and action: \", state, action);\n    }\n  }\n});\nexport const {\n  setTitle,\n  addField,\n  updateField,\n  removeField,\n  addForm\n} = formSlice.actions;\nexport default formSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","title","fields","formDataList","formSlice","name","reducers","setTitle","state","action","payload","console","log","addField","push","updateField","index","fieldData","removeField","splice","addForm","actions","reducer"],"sources":["/Users/yashsoni/Documents/web-apps/js codes/Machine-coding-UI/euler-motors/src/components/redux/slices/formSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nconst initialState = {\n  title: '',\n  fields: [],\n  formDataList: []\n}\n\nconst formSlice = createSlice({\n  name: 'form',\n  initialState,\n  reducers: {\n    setTitle: (state, action) => {\n      state.title = action.payload;\n      console.log('State and action of setTitle reducer: ', state, action)\n    },\n    addField: (state, action) => {\n      state.fields.push(action.payload)\n    },\n    updateField: (state, action) => {\n      const {index, fieldData} = action.payload\n      state.fields[index] = { ...state.fields[index], ...fieldData }\n    },\n    removeField: (state, action) => {\n      state.fields.splice(action.payload, 1)\n    },\n    addForm: (state, action) => {\n      state.formDataList.push(action.payload)\n      console.log(\"formDataList state and action: \", state, action);\n    }\n  }\n})\n\nexport const { setTitle, addField, updateField, removeField, addForm } = formSlice.actions \nexport default formSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,EAAE;EACTC,MAAM,EAAE,EAAE;EACVC,YAAY,EAAE;AAChB,CAAC;AAED,MAAMC,SAAS,GAAGL,WAAW,CAAC;EAC5BM,IAAI,EAAE,MAAM;EACZL,YAAY;EACZM,QAAQ,EAAE;IACRC,QAAQ,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC3BD,KAAK,CAACP,KAAK,GAAGQ,MAAM,CAACC,OAAO;MAC5BC,OAAO,CAACC,GAAG,CAAC,wCAAwC,EAAEJ,KAAK,EAAEC,MAAM,CAAC;IACtE,CAAC;IACDI,QAAQ,EAAEA,CAACL,KAAK,EAAEC,MAAM,KAAK;MAC3BD,KAAK,CAACN,MAAM,CAACY,IAAI,CAACL,MAAM,CAACC,OAAO,CAAC;IACnC,CAAC;IACDK,WAAW,EAAEA,CAACP,KAAK,EAAEC,MAAM,KAAK;MAC9B,MAAM;QAACO,KAAK;QAAEC;MAAS,CAAC,GAAGR,MAAM,CAACC,OAAO;MACzCF,KAAK,CAACN,MAAM,CAACc,KAAK,CAAC,GAAG;QAAE,GAAGR,KAAK,CAACN,MAAM,CAACc,KAAK,CAAC;QAAE,GAAGC;MAAU,CAAC;IAChE,CAAC;IACDC,WAAW,EAAEA,CAACV,KAAK,EAAEC,MAAM,KAAK;MAC9BD,KAAK,CAACN,MAAM,CAACiB,MAAM,CAACV,MAAM,CAACC,OAAO,EAAE,CAAC,CAAC;IACxC,CAAC;IACDU,OAAO,EAAEA,CAACZ,KAAK,EAAEC,MAAM,KAAK;MAC1BD,KAAK,CAACL,YAAY,CAACW,IAAI,CAACL,MAAM,CAACC,OAAO,CAAC;MACvCC,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEJ,KAAK,EAAEC,MAAM,CAAC;IAC/D;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEF,QAAQ;EAAEM,QAAQ;EAAEE,WAAW;EAAEG,WAAW;EAAEE;AAAQ,CAAC,GAAGhB,SAAS,CAACiB,OAAO;AAC1F,eAAejB,SAAS,CAACkB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}