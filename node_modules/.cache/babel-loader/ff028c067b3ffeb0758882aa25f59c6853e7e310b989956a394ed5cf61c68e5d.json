{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  title: '',\n  fields: [{\n    type: 'dropdown',\n    count: '',\n    data: []\n  }, {\n    type: 'textField',\n    count: '',\n    data: []\n  }, {\n    type: 'textArea',\n    count: '',\n    data: []\n  }, {\n    type: 'switch',\n    count: '',\n    data: []\n  }, {\n    type: 'radio',\n    count: '',\n    data: []\n  }]\n};\nconst formSlice = createSlice({\n  name: 'form',\n  initialState,\n  reducers: {\n    setTitle: (state, action) => {\n      state.title = action.payload;\n    },\n    addField: (state, action) => {\n      state.fields.push(action.payload);\n    },\n    updateField: (state, action) => {\n      const {\n        index,\n        fieldData\n      } = action.payload;\n      state.fields[index] = {\n        ...state.fields[index],\n        ...fieldData\n      };\n    },\n    removeField: (state, action) => {\n      state.fields.splice(action.payload, 1);\n    }\n  }\n});\nexport const [setTitle, addField, updateField, removeField] = formSlice.actions;\nexport default formSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","title","fields","type","count","data","formSlice","name","reducers","setTitle","state","action","payload","addField","push","updateField","index","fieldData","removeField","splice","actions","reducer"],"sources":["/Users/yashsoni/Documents/web-apps/js codes/Machine-coding-UI/euler-motors/src/components/redux/slices/formSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nconst initialState = {\n  title: '',\n  fields: [\n    {type: 'dropdown', count: '', data: [] },\n    {type: 'textField', count: '', data: [] },\n    {type: 'textArea', count: '', data: [] },\n    {type: 'switch', count: '', data: [] },\n    {type: 'radio', count: '', data: [] }\n  ]\n}\n\nconst formSlice = createSlice({\n  name: 'form',\n  initialState,\n  reducers: {\n    setTitle: (state, action) => {\n      state.title = action.payload;\n    },\n    addField: (state, action) => {\n      state.fields.push(action.payload)\n    },\n    updateField: (state, action) => {\n      const {index, fieldData} = action.payload\n      state.fields[index] = { ...state.fields[index], ...fieldData }\n    },\n    removeField: (state, action) => {\n      state.fields.splice(action.payload, 1)\n    }\n  }\n})\n\nexport const [ setTitle, addField, updateField, removeField ] = formSlice.actions \nexport default formSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,EAAE;EACTC,MAAM,EAAE,CACN;IAACC,IAAI,EAAE,UAAU;IAAEC,KAAK,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAG,CAAC,EACxC;IAACF,IAAI,EAAE,WAAW;IAAEC,KAAK,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAG,CAAC,EACzC;IAACF,IAAI,EAAE,UAAU;IAAEC,KAAK,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAG,CAAC,EACxC;IAACF,IAAI,EAAE,QAAQ;IAAEC,KAAK,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAG,CAAC,EACtC;IAACF,IAAI,EAAE,OAAO;IAAEC,KAAK,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAG,CAAC;AAEzC,CAAC;AAED,MAAMC,SAAS,GAAGP,WAAW,CAAC;EAC5BQ,IAAI,EAAE,MAAM;EACZP,YAAY;EACZQ,QAAQ,EAAE;IACRC,QAAQ,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC3BD,KAAK,CAACT,KAAK,GAAGU,MAAM,CAACC,OAAO;IAC9B,CAAC;IACDC,QAAQ,EAAEA,CAACH,KAAK,EAAEC,MAAM,KAAK;MAC3BD,KAAK,CAACR,MAAM,CAACY,IAAI,CAACH,MAAM,CAACC,OAAO,CAAC;IACnC,CAAC;IACDG,WAAW,EAAEA,CAACL,KAAK,EAAEC,MAAM,KAAK;MAC9B,MAAM;QAACK,KAAK;QAAEC;MAAS,CAAC,GAAGN,MAAM,CAACC,OAAO;MACzCF,KAAK,CAACR,MAAM,CAACc,KAAK,CAAC,GAAG;QAAE,GAAGN,KAAK,CAACR,MAAM,CAACc,KAAK,CAAC;QAAE,GAAGC;MAAU,CAAC;IAChE,CAAC;IACDC,WAAW,EAAEA,CAACR,KAAK,EAAEC,MAAM,KAAK;MAC9BD,KAAK,CAACR,MAAM,CAACiB,MAAM,CAACR,MAAM,CAACC,OAAO,EAAE,CAAC,CAAC;IACxC;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM,CAAEH,QAAQ,EAAEI,QAAQ,EAAEE,WAAW,EAAEG,WAAW,CAAE,GAAGZ,SAAS,CAACc,OAAO;AACjF,eAAed,SAAS,CAACe,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}