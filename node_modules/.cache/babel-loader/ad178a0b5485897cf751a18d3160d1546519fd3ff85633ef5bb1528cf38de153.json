{"ast":null,"code":"var _jsxFileName = \"/Users/yashsoni/Documents/web-apps/js codes/Machine-coding-UI/euler-motors/src/components/InputForm/InputForm.jsx\",\n  _s = $RefreshSig$();\nimport { useForm } from 'react-hook-form';\nimport { Box, Button, Modal } from '@mui/material';\nimport { useReducer, useState } from 'react';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Actions = {\n  SetDropdowns: 'setDropdowns',\n  SetTextFields: 'setTextFields',\n  SetTextAreas: 'setTextAreas',\n  SetSwitches: 'setSwitches',\n  SetRadios: 'setRadios',\n  ZERO: 'zero'\n};\nfunction reducer(state, action) {\n  switch (action.type) {\n    case Actions.SetDropdowns:\n      return {\n        ...state,\n        dropdownCount: action.payload\n      };\n    case Actions.SetTextFields:\n      return {\n        ...state,\n        textFieldCount: action.payload\n      };\n    case Actions.SetTextAreas:\n      return {\n        ...state,\n        textAreaCount: action.payload\n      };\n    case Actions.SetSwitches:\n      return {\n        ...state,\n        switchCount: action.payload\n      };\n    case Actions.SetRadios:\n      return {\n        ...state,\n        radioCount: action.payload\n      };\n    default:\n      break;\n  }\n}\nconst InputForm = () => {\n  _s();\n  const [openForm, setOpenForm] = useState(false);\n  const [formTitle, setFormTitle] = useState();\n  const [state, dispatch] = useReducer(reducer, {\n    dropdownCount: 0,\n    textFieldCount: 0,\n    textAreaCount: 0,\n    switchCount: 0,\n    radioCount: 0\n  });\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n  const onSubmit = data => {\n    console.log(data);\n  };\n  function updateTextFieldCount(e) {\n    dispatch({\n      type: Actions.SetTextFields,\n      payload: e.target.value\n    });\n  }\n  function updateDropdownCount(e) {\n    dispatch({\n      type: Actions.SetTextFields,\n      payload: e.target.value\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Input From\", /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => setOpenForm(true),\n      children: \"Create Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: openForm,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        className: \"inputForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputFields\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit(onSubmit),\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Form Title: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: formTitle,\n              onChange: e => setFormTitle(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Number of Input Fields Required:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"TextFields:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: state.textFieldCount,\n              onChange: updateTextFieldCount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setOpenForm(false),\n          className: \"closeButton\",\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(InputForm, \"DO5pP8TWhPXzFCVkNgxe4u0ZSUM=\", false, function () {\n  return [useForm];\n});\n_c = InputForm;\nexport default InputForm;\nvar _c;\n$RefreshReg$(_c, \"InputForm\");","map":{"version":3,"names":["useForm","Box","Button","Modal","useReducer","useState","jsxDEV","_jsxDEV","Actions","SetDropdowns","SetTextFields","SetTextAreas","SetSwitches","SetRadios","ZERO","reducer","state","action","type","dropdownCount","payload","textFieldCount","textAreaCount","switchCount","radioCount","InputForm","_s","openForm","setOpenForm","formTitle","setFormTitle","dispatch","register","handleSubmit","onSubmit","data","console","log","updateTextFieldCount","e","target","value","updateDropdownCount","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","open","className","onChange","_c","$RefreshReg$"],"sources":["/Users/yashsoni/Documents/web-apps/js codes/Machine-coding-UI/euler-motors/src/components/InputForm/InputForm.jsx"],"sourcesContent":["import { useForm } from 'react-hook-form'\nimport { Box, Button, Modal } from '@mui/material'\nimport { useReducer, useState } from 'react'\nimport './styles.css'\n\nexport const Actions = {\n\tSetDropdowns: 'setDropdowns',\n\tSetTextFields: 'setTextFields',\n\tSetTextAreas: 'setTextAreas',\n\tSetSwitches: 'setSwitches',\n\tSetRadios: 'setRadios',\n\tZERO: 'zero'\n}\n\nfunction reducer(state, action) {\n  switch(action.type) {\n    case Actions.SetDropdowns:\n      return {...state, dropdownCount: action.payload}\n    \n    case Actions.SetTextFields:\n      return {...state, textFieldCount: action.payload}\n\n    case Actions.SetTextAreas:\n      return {...state, textAreaCount: action.payload}\n    \n    case Actions.SetSwitches:\n      return {...state, switchCount: action.payload}\n    \n    case Actions.SetRadios:\n      return {...state, radioCount: action.payload}\n    \n    default:\n      break\n  }\n}\n\nconst InputForm = () => {\n  const [ openForm, setOpenForm ] = useState(false)\n  const [ formTitle, setFormTitle ] = useState()\n\n  const [ state, dispatch ] = useReducer(reducer, { \n    dropdownCount: 0, \n    textFieldCount: 0, \n    textAreaCount: 0, \n    switchCount: 0, \n    radioCount: 0, \n   })\n\n\n  const { register, handleSubmit } = useForm()\n\n  const onSubmit= (data) => {\n    console.log(data)\n  }\n\n  function updateTextFieldCount(e) {\n    dispatch({\n      type: Actions.SetTextFields,\n      payload: e.target.value\n    })\n  }\n\n  function updateDropdownCount(e) {\n    dispatch({\n      type: Actions.SetTextFields,\n      payload: e.target.value\n    })\n  }\n\n  return (\n    <div>\n      Input From\n      <Button onClick={() => setOpenForm(true)}>Create Form</Button>\n      <Modal open={openForm}>\n        <Box className='inputForm'>\n          <div className='inputFields'>\n            <form onSubmit={handleSubmit(onSubmit)}>\n              <label>Form Title: </label>\n              <input type='text' value={formTitle} onChange={e => setFormTitle(e.target.value)} />\n\n              <p>Number of Input Fields Required:</p>\n\n              {/* <label>Dropdowns:</label>\n              <input type='number' /> */}\n\n              <label>TextFields:</label>\n              <input type='number' value={state.textFieldCount} onChange={updateTextFieldCount}/>\n\n              {/* <label>TextAreas:</label>\n              <input type='number' />\n\n              <label>Switches:</label>\n              <input type='number' />\n\n              <label>Radio Buttons:</label>\n              <input type='number' /> */}\n            </form>\n          </div>\n          <button onClick={() => setOpenForm(false)} className='closeButton'>X</button>\n        </Box>\n      </Modal>\n    </div>\n  )\n}\n\nexport default InputForm"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}